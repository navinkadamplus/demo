{"ast":null,"code":"var _jsxFileName = \"/home/navin/Documents/officeWork/fabric_pract/src/Component/TextAlign/TextAlign.jsx\";\nimport React from \"react\";\nexport default function TextAlign(props) {\n  var selectedTextAlign = props.selectedTextAlign,\n      onChangeTextAlign = props.onChangeTextAlign,\n      aligns = props.aligns;\n\n  if (!(onChangeTextAlign && aligns)) {\n    alert(\"fill all details--> onChangeTextAlign,aligns \");\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, \"fill all details--> onChangeTextAlign,aligns \");\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"textAlign\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Text Align : \"), React.createElement(\"select\", {\n    id: \"textAlign\",\n    name: \"Text-Align\",\n    value: selectedTextAlign,\n    onChange: onChangeTextAlign,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, aligns.map(function (fontName, ind) {\n    return React.createElement(\"option\", {\n      key: \"\".concat(ind),\n      value: \"\".concat(fontName),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"\".concat(fontName));\n  })));\n}","map":{"version":3,"sources":["/home/navin/Documents/officeWork/fabric_pract/src/Component/TextAlign/TextAlign.jsx"],"names":["React","TextAlign","props","selectedTextAlign","onChangeTextAlign","aligns","alert","map","fontName","ind"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA,MACjCC,iBADiC,GACgBD,KADhB,CACjCC,iBADiC;AAAA,MACdC,iBADc,GACgBF,KADhB,CACdE,iBADc;AAAA,MACKC,MADL,GACgBH,KADhB,CACKG,MADL;;AAEvC,MAAI,EAAED,iBAAiB,IAAIC,MAAvB,CAAJ,EAAoC;AAClCC,IAAAA,KAAK,CAAC,+CAAD,CAAL;AAEA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAAP;AACD;;AACD,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AACE,IAAA,EAAE,EAAC,WADL;AAEE,IAAA,IAAI,EAAC,YAFP;AAGE,IAAA,KAAK,EAAEH,iBAHT;AAIE,IAAA,QAAQ,EAAEC,iBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGC,MAAM,CAACE,GAAP,CAAW,UAACC,QAAD,EAAWC,GAAX;AAAA,WACV;AAAQ,MAAA,GAAG,YAAKA,GAAL,CAAX;AAAuB,MAAA,KAAK,YAAKD,QAAL,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAiDA,QAAjD,EADU;AAAA,GAAX,CANH,CAFF,CADF;AAeD","sourcesContent":["import React from \"react\";\n\nexport default function TextAlign(props) {\n  let { selectedTextAlign, onChangeTextAlign, aligns } = props;\n  if (!(onChangeTextAlign && aligns)) {\n    alert(\"fill all details--> onChangeTextAlign,aligns \");\n\n    return <div>fill all details--> onChangeTextAlign,aligns </div>;\n  }\n  return (\n    <div>\n      <label htmlFor=\"textAlign\">Text Align : </label>\n      <select\n        id=\"textAlign\"\n        name=\"Text-Align\"\n        value={selectedTextAlign}\n        onChange={onChangeTextAlign}\n      >\n        {aligns.map((fontName, ind) => (\n          <option key={`${ind}`} value={`${fontName}`}>{`${fontName}`}</option>\n        ))}\n      </select>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}